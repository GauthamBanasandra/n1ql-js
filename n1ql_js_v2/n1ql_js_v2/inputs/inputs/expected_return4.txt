function query() {
    if (res1.isInstance) {
        res1.x = res1.iter(function (row) {
            if (res2.isInstance) {
                res2.x = res2.iter(function (row) {
                    if (res3.isInstance) {
                        res3.x = res3.iter(function (row) {
                            return res3.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        });
                        switch (res3.x.code + res3.x.args) {
                        case 'return(x)':
                            return res2.stopIter({
                                'code': 'return',
                                'args': 'res3.x.data',
                                'data': res3.x.data
                            });
                        }
                    } else {
                        for (var row of res3) {
                            return res2.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        }
                    }
                });
                switch (res2.x.code + res2.x.args) {
                case 'returnres3.x.data':
                    return res1.stopIter({
                        'code': 'return',
                        'args': 'res2.x.data',
                        'data': res2.x.data
                    });
                case 'return(x)':
                    return res1.stopIter({
                        'code': 'return',
                        'args': 'res2.x.data',
                        'data': res2.x.data
                    });
                }
            } else {
                for (var row of res2) {
                    if (res3.isInstance) {
                        res3.x = res3.iter(function (row) {
                            return res3.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        });
                        switch (res3.x.code + res3.x.args) {
                        case 'return(x)':
                            return res1.stopIter({
                                'code': 'return',
                                'args': 'res3.x.data',
                                'data': res3.x.data
                            });
                        }
                    } else {
                        for (var row of res3) {
                            return res1.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        }
                    }
                }
            }
        });
        switch (res1.x.code + res1.x.args) {
        case 'returnres2.x.data':
            return res1.x.data;;
        case 'returnres3.x.data':
            return res1.x.data;;
        case 'return(x)':
            return res1.x.data;;
        }
    } else {
        for (var row of res1) {
            if (res2.isInstance) {
                res2.x = res2.iter(function (row) {
                    if (res3.isInstance) {
                        res3.x = res3.iter(function (row) {
                            return res3.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        });
                        switch (res3.x.code + res3.x.args) {
                        case 'return(x)':
                            return res2.stopIter({
                                'code': 'return',
                                'args': 'res3.x.data',
                                'data': res3.x.data
                            });
                        }
                    } else {
                        for (var row of res3) {
                            return res2.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        }
                    }
                });
                switch (res2.x.code + res2.x.args) {
                case 'returnres3.x.data':
                    return res2.x.data;
                case 'return(x)':
                    return res2.x.data;
                }
            } else {
                for (var row of res2) {
                    if (res3.isInstance) {
                        res3.x = res3.iter(function (row) {
                            return res3.stopIter({
                                'code': 'return',
                                'args': '(x)',
                                'data': x
                            });
                        });
                        switch (res3.x.code + res3.x.args) {
                        case 'return(x)':
                            return res3.x.data;
                        }
                    } else {
                        for (var row of res3) {
                            return x;
                        }
                    }
                }
            }
        }
    }
}